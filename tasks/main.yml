# roles/meta/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - install
    - configure

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Ensure directories exists
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('openio') }}"
    group: "{{ item.group | default('openio') }}"
    mode: "{{ item.mode | default(0755) }}"
  with_items:
    - path: "/etc/gridinit.d/{{ openio_meta_namespace }}"
    - path: "{{ openio_meta_sysconfig_dir }}/{{ openio_meta_type }}-{{ openio_meta_serviceid }}"
    - path: "{{ openio_meta_volume }}"
    - path: "{{ openio_meta_sysconfig_dir }}/watch"
    - path: "/var/log/oio/sds/{{ openio_meta_namespace }}/{{ openio_meta_type }}-{{ openio_meta_serviceid }}"
      owner: "{{ syslog_user }}"
      mode: "0750"
  tags: configure

- name: Generate configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: openio
    group: openio
    mode: 0640
  with_items:
    - src: "meta.conf.j2"
      dest: "{{ openio_meta_sysconfig_dir }}/\
        {{ openio_meta_type }}-{{ openio_meta_serviceid }}/{{ openio_meta_type }}-{{ openio_meta_serviceid }}.conf"
    - src: "gridinit_meta.conf.j2"
      dest: "{{ openio_meta_gridinit_dir }}/{{ openio_meta_gridinit_file_prefix }}\
        {{ openio_meta_type }}-{{ openio_meta_serviceid }}.conf"
    - src: "watch-meta.yml.j2"
      dest: "{{ openio_meta_sysconfig_dir }}/watch/{{ openio_meta_type }}-{{ openio_meta_serviceid }}.yml"
  register: _meta_conf
  tags: configure

- name: "restart meta to apply the new configuration"
  shell: |
    gridinit_cmd reload
    gridinit_cmd restart  {{openio_meta_namespace}}-{{ openio_meta_type }}-{{openio_meta_serviceid}}
  register: _restart_meta
  when:
    - _meta_conf is changed
    - not openio_meta_provision_only
  tags: configure

- block:
    - name: "Ensure meta is started"
      command: gridinit_cmd start {{ openio_meta_namespace }}-{{ openio_meta_servicename }}
      register: _start_meta
      changed_when: '"Success" in _start_meta.stdout'
      when:
        - not openio_meta_provision_only
        - _restart_meta is skipped
      tags: configure

    - name: check meta
      command: "oio-tool ping {{ openio_meta_bind_address }}:{{ openio_meta_bind_port }}"
      register: _meta_check
      retries: 30
      delay: 0.5
      until: _meta_check is success
      changed_when: false
      tags: configure
      failed_when:
        - _meta_check.rc != 0
        - "'PING OK' not in _meta_check.stdout"
      when: openio_meta_type != 'meta1'
  when: openio_bootstrap | d(false)
...
